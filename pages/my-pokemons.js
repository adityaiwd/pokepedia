import { useState, useEffect } from "react";
import Head from "next/head";
import { Title, TitleWrapper } from "../components/global/Global";
import PokemonCard from "../components/global/PokemonCard";
import { TwoColumnGrid } from "../components/global/Global";
import { db } from "../utils/db";
import Loader from "../components/global/Loader";
import pokemonImage from "../utils/pokemon-image";
import ReleaseModal from "../components/my-pokemons-list/ReleaseModal";
import { toast } from "react-toastify";
import capitalizeFirstLetter from "../utils/capitalize-first-letter";

export default function MyPokemons() {
  const [openModal, setOpenModal] = useState(false);
  const [releasePokemonData, setReleasePokemonData] = useState({
    id: null,
    name: "",
    nickname: "",
  });
  const [pokemons, setPokemons] = useState([]);

  const openReleaseModal = (pokemon) => {
    setReleasePokemonData(pokemon);
    setOpenModal(true);
  };

  const releasePokemon = async () => {
    await db.myPokemons.delete(releasePokemonData.id);
    const pokemonName = capitalizeFirstLetter(releasePokemonData.nickname ? releasePokemonData.nickname : releasePokemonData.name)
    toast.success(`Successfuly release ${pokemonName}`, {
      position: "bottom-center",
      autoClose: 5000,
      hideProgressBar: false,
      progress: undefined,
      style: {fontSize:'1.4rem'}
    });
    setOpenModal(false);
    setReleasePokemonData({
      id: null,
      name: "",
      nickname: "",
    });
  };

  useEffect(() => {
    db.myPokemons.toArray().then((pokemons) => {
      setPokemons(pokemons);
    });
  }, [pokemons]);

  return (
    <div>
      <Head>
        <title>Poképedia | My Pokémons</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TitleWrapper>
        <Title>My Pokémons</Title>
      </TitleWrapper>
      {pokemons ? (
        <TwoColumnGrid>
          {pokemons.map((pokemon) => (
            <PokemonCard
              key={pokemon.id}
              id={pokemon.pokeId}
              image={pokemonImage(pokemon.pokeId)}
              name={pokemon.name}
              nickname={pokemon.nickname}
              onClick={() => openReleaseModal(pokemon)}
              disabledLink
            />
          ))}
        </TwoColumnGrid>
      ) : (
        <Loader />
      )}
      <ReleaseModal
        open={openModal}
        onClose={() => setOpenModal(false)}
        pokemon={releasePokemonData}
        release={releasePokemon}
      />
    </div>
  );
}
